name: CI

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

env:
  MIN_GO_VER: 1.21

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.MIN_GO_VER }}

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      # Fail fast is disabled because there are Go version specific features and tests
      # that should be able to fail independently.
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go: [ '1.21', '1.22', '1.23', '1.24' ]
    env:
      GOFLAGS: -mod=readonly

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: go test -race -v ./...

  test-linkname-source:
    name: "Test internal/linkname source code"
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -mod=readonly
      TEST_LINKNAME_SOURCE: 1

    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.MIN_GO_VER }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: go test -v -run=TestSourceCode ./internal/linkname

  lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      GOFLAGS: -mod=readonly

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: stable

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1
          only-new-issues: true
